version: '3.4'

services:
  grasindo.api.products:
    container_name: grasindo.api.products
    image: grasindo.api.products
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "1337"
    networks:
      - grasindo.api
    environment:
      DB_HOST: db
      DB_NAME: grasindo_products
      DB_USER: mypgadmin
      DB_PASS: password
    depends_on:
      - db
    volumes: 
      - tmp:/tmp


  db:
    container_name: db
    image: postgres:12.3-alpine
    restart: always
    environment:
      POSTGRES_DB: grasindo_products
      POSTGRES_USER: mypgadmin
      POSTGRES_PASSWORD: password
    networks:
      - grasindo.api
    volumes: 
      - tmp:/tmp

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8080"
    networks:
      - grasindo.api

  reverse-proxy:
    container_name: nginx
    image: nginx:stable
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - grasindo.api
    depends_on:
      - "grasindo.api.products"
      - adminer

  seeder:
    build:
      context: ./../Grasindo.API.Seeder
      dockerfile: Dockerfile
    container_name: seeder_db
    networks: 
      - grasindo.api
    environment:
      DB_HOST: db
      DB_NAME: grasindo_products
      DB_USER: mypgadmin
      DB_PASS: password
    depends_on:
      - db
      - "grasindo.api.products"

volumes: 
  tmp:

networks: 
  grasindo.api: